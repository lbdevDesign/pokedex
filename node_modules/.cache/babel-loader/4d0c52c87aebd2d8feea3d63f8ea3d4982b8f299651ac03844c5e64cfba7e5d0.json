{"ast":null,"code":"var _jsxFileName = \"/Users/lb8/Documents/GitHub/lbpokedex/src/components/card.jsx\";\nimport PokeType from \"./pokeType\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * PokeCard component: Renders a card for a single Pokemon, including its name, number, image, and types.\n * Links to a dedicated Pokémon page when clicked.\n *\n * @param {object} props - The props object containing the Pokémon data.\n * @prop {object} props.data - The data for the Pokémon to display.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PokeCard(props) {\n  const {\n    data\n  } = props; // Destructure the data prop\n  if (!data) return null; // Handle potential missing data\n\n  const pokedexId = props.data.pokedex_id;\n  const pokePath = '/pokemon/' + pokedexId;\n  let pokeNumber;\n  if (pokedexId < 10) pokeNumber = `00${pokedexId}`;\n  if (pokedexId < 100 && pokedexId >= 10) pokeNumber = `0${pokedexId}`;\n  if (pokedexId >= 100) pokeNumber = pokedexId;\n  const typesArray = props.data.types;\n  // console.log(typesArray);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.data && /*#__PURE__*/_jsxDEV(Link, {\n      to: pokePath,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-end justify-between bg-white px-4 pb-6 pt-3 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"size-16 mr-4\",\n            src: props.data.sprites.regular,\n            alt: props.data.name.fr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"self-center mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: props.data.name.fr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"#\", pokeNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2 justify-start\",\n          children: typesArray.map((type, index) => /*#__PURE__*/_jsxDEV(PokeType, {\n            type: type,\n            size: \"small\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_c = PokeCard;\nexport default PokeCard;\nvar _c;\n$RefreshReg$(_c, \"PokeCard\");","map":{"version":3,"names":["PokeType","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","PokeCard","props","data","pokedexId","pokedex_id","pokePath","pokeNumber","typesArray","types","children","to","className","src","sprites","regular","alt","name","fr","fileName","_jsxFileName","lineNumber","columnNumber","map","type","index","size","_c","$RefreshReg$"],"sources":["/Users/lb8/Documents/GitHub/lbpokedex/src/components/card.jsx"],"sourcesContent":["import PokeType from \"./pokeType\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * PokeCard component: Renders a card for a single Pokemon, including its name, number, image, and types.\n * Links to a dedicated Pokémon page when clicked.\n *\n * @param {object} props - The props object containing the Pokémon data.\n * @prop {object} props.data - The data for the Pokémon to display.\n */\nfunction PokeCard(props) {\n\n    const { data } = props; // Destructure the data prop\n    if (!data) return null; // Handle potential missing data\n\n    const pokedexId = props.data.pokedex_id;\n    const pokePath = '/pokemon/' + pokedexId;\n\n    let pokeNumber;\n    if (pokedexId < 10) pokeNumber = `00${pokedexId}`;\n    if (pokedexId < 100 && pokedexId >= 10) pokeNumber = `0${pokedexId}`;\n    if (pokedexId >= 100) pokeNumber = pokedexId\n\n    const typesArray = props.data.types;\n    // console.log(typesArray);\n\n\n    return(\n        <>\n            {props.data && (\n                <Link to={pokePath}>\n                    <div className=\"flex items-end justify-between bg-white px-4 pb-6 pt-3 rounded-lg\">\n                        <div className='flex items-end'>\n                            <img \n                                className=\"size-16 mr-4\"\n                                src={props.data.sprites.regular} \n                                alt={props.data.name.fr} \n                            />\n                            <div className='self-center mt-2'>\n                                <h3>{props.data.name.fr}</h3>\n                                <p>#{pokeNumber}</p>\n                            </div>\n                        </div>\n                        <div className=\"flex flex-col gap-2 justify-start\">\n                            {typesArray.map((type, index) => (\n                                <PokeType key={index} type={type} size=\"small\"/>\n                            ))}\n                        </div>\n                    </div>\n                </Link>\n            )} \n        </>\n    )\n}\n\nexport default PokeCard;"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOA,SAASC,QAAQA,CAACC,KAAK,EAAE;EAErB,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK,CAAC,CAAC;EACxB,IAAI,CAACC,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC;;EAExB,MAAMC,SAAS,GAAGF,KAAK,CAACC,IAAI,CAACE,UAAU;EACvC,MAAMC,QAAQ,GAAG,WAAW,GAAGF,SAAS;EAExC,IAAIG,UAAU;EACd,IAAIH,SAAS,GAAG,EAAE,EAAEG,UAAU,GAAI,KAAIH,SAAU,EAAC;EACjD,IAAIA,SAAS,GAAG,GAAG,IAAIA,SAAS,IAAI,EAAE,EAAEG,UAAU,GAAI,IAAGH,SAAU,EAAC;EACpE,IAAIA,SAAS,IAAI,GAAG,EAAEG,UAAU,GAAGH,SAAS;EAE5C,MAAMI,UAAU,GAAGN,KAAK,CAACC,IAAI,CAACM,KAAK;EACnC;;EAGA,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACKR,KAAK,CAACC,IAAI,iBACPL,OAAA,CAACF,IAAI;MAACe,EAAE,EAAEL,QAAS;MAAAI,QAAA,eACfZ,OAAA;QAAKc,SAAS,EAAC,mEAAmE;QAAAF,QAAA,gBAC9EZ,OAAA;UAAKc,SAAS,EAAC,gBAAgB;UAAAF,QAAA,gBAC3BZ,OAAA;YACIc,SAAS,EAAC,cAAc;YACxBC,GAAG,EAAEX,KAAK,CAACC,IAAI,CAACW,OAAO,CAACC,OAAQ;YAChCC,GAAG,EAAEd,KAAK,CAACC,IAAI,CAACc,IAAI,CAACC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACFxB,OAAA;YAAKc,SAAS,EAAC,kBAAkB;YAAAF,QAAA,gBAC7BZ,OAAA;cAAAY,QAAA,EAAKR,KAAK,CAACC,IAAI,CAACc,IAAI,CAACC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BxB,OAAA;cAAAY,QAAA,GAAG,GAAC,EAACH,UAAU;YAAA;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNxB,OAAA;UAAKc,SAAS,EAAC,mCAAmC;UAAAF,QAAA,EAC7CF,UAAU,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxB3B,OAAA,CAACH,QAAQ;YAAa6B,IAAI,EAAEA,IAAK;YAACE,IAAI,EAAC;UAAO,GAA/BD,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA2B,CAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EACT,gBACH,CAAC;AAEX;AAACK,EAAA,GA3CQ1B,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}